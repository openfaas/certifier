name: build

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env:
  IP: 127.0.0.1
  CERTIFIER_NAMESPACES: certifier-test

jobs:
  lint:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
  test-kubernetes:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: get tools
        run: ./contrib/get_tools.sh
      - name: create kubernetes cluster
        run: ./contrib/create_kubernetes_cluster.sh
      - name: deploy openfaas
        run: ./contrib/deploy_openfaas.sh
      - name: test kubernetes
        run: make test-kubernetes
        env:
          OPENFAAS_URL: http://${{ env.IP }}:31112/
  test-faasd:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      CERTIFIER_NAMESPACES: ""
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Install faasd
        run: ./contrib/deploy_faasd.sh
      - name: test faasd
        run: |
          export CI=true
          export OPENFAAS_CONFIG='~/.openfaas'
          export OPENFAAS_URL='http://127.0.0.1:8080/'
          make test-faasd
